<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iovu.iovuback.mapper.UserMapper">

    <!-- 결과 매핑 -->
    <resultMap id="UserResultMap" type="User">
        <id property="user_id" column="USER_ID"/>
        <result property="name" column="NAME"/>
        <result property="email" column="EMAIL"/>
        <result property="profile_url" column="PROFILE_URL"/>
        <result property="provider" column="PROVIDER"/>
        <result property="provider_uid" column="PROVIDER_UID"/>
        <result property="created_at" column="CREATED_AT"/>
    </resultMap>

    <!-- 소셜 로그인 제공자와 제공자 ID로 사용자 조회 -->
    <select id="findByProviderAndProviderId" resultMap="UserResultMap">
        SELECT * FROM USERS
        WHERE PROVIDER = #{provider} AND PROVIDER_UID = #{provider_uid}
    </select>

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="User">
        INSERT INTO USERS (
            NAME, EMAIL, PROFILE_URL, PROVIDER, PROVIDER_UID, CREATED_AT
        ) VALUES (
                     #{name}, #{email}, #{profile_url}, #{provider}, #{provider_uid}, SYSDATE
                 )
    </insert>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUser" parameterType="User">
        UPDATE USERS SET
                         NAME = #{name},
                         EMAIL = #{email},
                         PROFILE_URL = #{profile_url}
        WHERE USER_ID = #{user_id}
    </update>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" resultMap="UserResultMap">
        SELECT * FROM USERS WHERE EMAIL = #{email}
    </select>

    <!-- ID로 사용자 조회 -->
    <select id="findByUserId" resultMap="UserResultMap">
        SELECT * FROM USERS WHERE USER_ID = #{userId}
    </select>

</mapper>